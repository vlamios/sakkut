---
- name: create VPN client {{ item.value.name }}
  block:
    - debug:
        msg: "create VPN client {{ item.value.name }}, \n                  {{ item.value.eMail }}"
    - file:
        path: /etc/openvpn/client/{{ item.value.name }}
        state: absent
    - shell: ./easyrsa build-client-full {{ item.value.name }} nopass
      args:
        executable: /bin/bash
        chdir: /etc/easy-rsa/
    - file:
        path: /etc/openvpn/client/{{ item.value.name }}
        state: directory
        mode: '0755'
    - shell: cp -rp /etc/easy-rsa/pki/ca.crt /etc/openvpn/client/{{ item.value.name }}/
      args:
        executable: /bin/bash
    - shell: cp -rp /etc/easy-rsa/pki/issued/{{ item.value.name }}.crt /etc/openvpn/client/{{ item.value.name }}/
      args:
        executable: /bin/bash
    - shell: cp -rp /etc/easy-rsa/pki/private/{{ item.value.name }}.key /etc/openvpn/client/{{ item.value.name }}/
      args:
        executable: /bin/bash
### .OVPN-file preparation
    - template:
        src: client.ovpn.j2
        dest: /etc/openvpn/client/{{ item.value.name }}/client.ovpn
        owner: root
        group: root
        mode: '0644'
        backup: no
    - shell: echo "<ca>" >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: cat /etc/openvpn/client/{{ item.value.name }}/ca.crt >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: echo "</ca>" >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: echo "<cert>" >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: cat /etc/openvpn/client/{{ item.value.name }}/{{ item.value.name }}.crt >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: echo "</cert>" >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: echo "<key>" >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: cat /etc/openvpn/client/{{ item.value.name }}/{{ item.value.name }}.key >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: echo "</key>" >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: echo "<tls-auth>" >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: cat /etc/openvpn/server/ta.key >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
    - shell: echo "</tls-auth>" >> /etc/openvpn/client/{{ item.value.name }}/client.ovpn
### .OVPN-file preparation finished
    - debug:
        msg: "VPN client {{ item.value.name }} created sucessfully"
  rescue:
    - debug:
        msg: "Unable to create, see errors below"

- name: Send config to {{ item.value.eMail }}
  block:
    - debug:
        msg: "send config to {{ item.value.eMail }}"
    - template:
        src: rawEmail.txt.j2
        dest: /tmp/rawEmail.txt
        owner: root
        group: root
        mode: '0644'
        backup: no
    - shell: base64 /etc/openvpn/client/{{ item.value.name }}/client.ovpn >> /tmp/rawEmail.txt
    - shell: echo >> /tmp/rawEmail.txt
    - shell: echo "--NextPart--" >> /tmp/rawEmail.txt
    - shell: aws sesv2 send-email --from-email-address {{ senderMail }} --destination "ToAddresses={{ item.value.eMail }}" --content "Raw={Data=$(cat /tmp/rawEmail.txt | base64)}" --endpoint-url https://postbox.cloud.yandex.net
      register: messageId
    - debug:
        msg: "{{ messageId.stdout }}"
  when: aws.region != '' and aws.access_key_id != '' and aws.secret_access_key != ''
  rescue:
    - debug:
        msg: "Unable to send"
  always:
    - file:
        path: /tmp/rawEmail.txt
        state: absent
